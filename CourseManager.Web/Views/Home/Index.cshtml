@using Newtonsoft.Json
@model  CourseManager.Core.Models.CourseManagerView

@{
    string[] days = { "Mon", "Tue", "Wed", "Thu", "Fri" };

    var hoursJson = JsonConvert.SerializeObject(Model.WeekCourseHours);
    var courseColorsJson = JsonConvert.SerializeObject(Model.Courses);

    ViewBag.Title = "Course Manager";
}

<div class="jumbotron">
    <h1>@ViewBag.Title</h1>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="row" >
            <div class="col-md-5">
                <h2>Schedule of courses</h2>
            </div>
            <div class="col-md-1"  style="padding-top: 15px;">
                <span id="prevWeek" class=" btn  btn-default glyphicon  glyphicon-arrow-left"></span>
            </div>
            <div class="col-md-4"  style="padding-top: 15px;">
                <h5>@Model.WeekTitle</h5>
            </div>
            <div class="col-md-2"  style="padding-top: 15px;">
                <span id="nextWeek" class=" btn  btn-default glyphicon glyphicon-arrow-right"></span>
            </div>
        </div>
        <div class="row">
            <div class="table-responsive">
                <table id="hoursTable" class="table table-bordered" week="@Model.Week" year="@Model.Year">
                    <thead>
                    <tr>
                        <th class="tcol col-md-2">
                            <div>
                                <span></span>
                            </div>
                        </th>
                        @for (var j = 0; j < 5; j++)
                        {
                            <th class="tcol col-md-2">
                                <div>
                                    <span  daynum="@(j + 1)">@days[j]</span>
                               </div>
                            </th>
                        }
                    </tr>
                    </thead>
                    @for (var i = 0; i < 9; i++)
                    {
                        <tr hourid="@(i + 9)">
                            <td class="lcol col-md-2">
                                <div>
                                    <span>@($"{i + 9:0#}:00")</span>
                                </div>
                            </td>
                            @for (var j = 0; j < 5; j++)
                            {
                                <td class="col-md-2" crsid>
                                    <div>
                                        <span class="hview" daynum="@(j + 1)"></span>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                    <tfoot></tfoot>
                </table>
            </div>
        </div>
        </div>
    <div class="col-md-4">
        <div class="row">
            <div div class="col-md-4">
                <h2>Courses</h2>
            </div>
            <div div class="col-md-8" style="padding-top: 15px;">
                <span id="addcourse" class="btn btn-default glyphicon glyphicon-plus" title="Add new course"></span>
            </div>
        </div>
        <div class="table-hover table-responsive">
            <table id="corseTable" class="table">
                <tbody>
                    @{
                        int n = 0;
                        foreach (var course in Model.Courses)
                        {
                            <tr cid="@course.Id">
                                <td class="col-md-1"><span>@($"{++n}. ")</span></td>
                                <td class="col-md-4">
                                    <div cname >
                                        <p>@course.Name</p>
                                    </div>
                                    <div  cedit class="hidden">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <span>New Course Name:</span>
                                            </div>
                                            <div class="col-md-2">
                                                <span nameok class="btn btn-xs  btn-success glyphicon glyphicon-ok-circle"></span>
                                            </div>
                                        </div>
                                        <div >
                                            <input coursenameedit type="text" required/>
                                        </div>
                                    </div>
                                </td>
                                <td class="col-md-1">
                                    <div class="input-group colorpicker-component mycp">
                                        <span class="input-group-addon"><i style="background-color: @course.Color;"></i></span>
                                    </div>
                                </td>
                                <td class="col-md-1">
                                    <span class="btn btn-success glyphicon glyphicon-edit"></span>
                                </td>
                                <td class="col-md-1">
                                    <span class="btn btn-danger glyphicon glyphicon-trash"></span>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



<div class="container">
    <!-- Trigger the modal with a button -->
    <!-- Modal -->
    <div class="modal fade" id="courseModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add New Course</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-10">
                            <span>
                                Course Name: <input id="coursename" type="text" required style="width: 100%" />
                            </span>
                        </div>
                        <div id="newcoursecp" class="input-group colorpicker-component mycp col-md-1">
                            <span class="input-group-addon"><i style="background-color: rgb(22, 129, 61);"></i></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="courseok" class="btn btn-primary" data-dismiss="modal" aria-hidden="true">Save</button>
                    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="container">
    <!-- Trigger the modal with a button -->
    <!-- Modal -->
    <div class="modal fade" id="error" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Error Message</h4>
                </div>
                <div class="modal-body">
                    <p>Error: <span id="errtext"></span></p>
                </div>
                <div class="modal-footer">
                    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                </div>
            </div>

        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script type="text/javascript">
    $(function () {
        var selectedCourseId = null;
        var courseColorsJson = "@courseColorsJson".replace(/&quot;/g, '"');
        var objColors = JSON.parse(courseColorsJson);

        var courseColors = $.map(objColors, function (it) {
            return {
                CourseId: it.Id,
                Color: it.Color,
                ShortName: $.map(it.Name.split(" "),
                    function(t) {
                        return t.slice(0, 1).toUpperCase();
                    }).join("")
            };
        });

        var hours ="@hoursJson".replace(/&quot;/g, '"');
        var objHours = $.parseJSON(hours);

        $.each(objHours,
            function(index, item) {

                var first = courseColors.find(m => m.CourseId === item.CourseId);

                if (first !== null && first !== undefined) {
                    let el = $("[hourid=\'" + item.Hour + "\']").children().find("[daynum = \'" + item.Day + "\']");

                    el.parent().parent().attr("crsid", item.CourseId).css({ "background-color": first.Color });

                    el.html(first.ShortName);
                    //  
                }
            });

        $(document).on({
            mouseenter: function (event) {
                let target = $(event.currentTarget);
                $(target).parent("tr").addClass("courseHover");
            },
            mouseleave: function (event) {
                let target = $(event.currentTarget);
                $(target).parent("tr").removeClass("courseHover");
            }
        }, "#corseTable tr[cid] td:nth-child(1),#corseTable tr[cid] td:nth-child(2)");

        $(document).on('click', "#corseTable tr[cid] td:nth-child(1),#corseTable tr[cid] td:nth-child(2)", function(event) {

            let target = $(event.currentTarget), parrentTr = $(target).parent("tr");
            $(parrentTr).siblings("tr").removeClass("courseSelected");

            if ($(target).find("[coursenameedit]").is(":focus")) {
                return;
            }
            
            if ($(parrentTr).hasClass("courseSelected")) {
                selectedCourseId = null;
                $(parrentTr).removeClass("courseSelected");
            } else {
                selectedCourseId = $(parrentTr).attr("cid");
                $(parrentTr).addClass("courseSelected");
                
            }
        });

        $(document).on('click', "[hourid] td:not(:first-child)",
            function(event) {

                if (selectedCourseId == null) {
                    return;
                }
                var target = $(event.currentTarget);

                let hour = $(target).parent("tr").attr("hourid"),
                    day = $(this).index(),
                    week = $(target).parents("table").attr("week"),
                    year = $(target).parents("table").attr("year");

                $.ajax({
                    type: 'POST',
                    url: '/api/coursehour',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        "CourseId": selectedCourseId,
                        "Week": week,
                        "Year": year,
                        "Day": day,
                        "Hour": hour
                    }),
                    success: function(res) {
                        if (res.courseId!=null) {
                            var first = courseColors.find(m => m.CourseId === res.courseId);

                            if (first !== null && first!== undefined) {
                                $(target).css({ "background-color": first.Color });
                                $(target).find(".hview").first().text(first.ShortName);
                            }
                        } else {
                            $(target).css({ "background-color": "#ffffff" });
                            $(target).find(".hview").first().text("");
                        }
                    },
                    error: function (response) {
                        $("#errtext").val(response.statusText);
                        $("#error").modal();
                    }
                });

            });

        $(".mycp:not(#newcoursecp)").colorpicker({ format: 'hex' }).on('colorpickerChange', function (e) {
            var colorStr = e.color.toString(e.color.format);

            $.ajax({
                type: 'PUT',
                url: '/api/course/color',
                contentType: 'application/json',
                data: JSON.stringify({
                    "Id": $(this).parents("tr").attr("cid"),
                    "Color": colorStr
                }),
                success: function (res) {
                    
                    var first = courseColors.find(m => m.CourseId === res.id);
                    
                    if (first !== null && first !== undefined) {
                        first.Color = res.color;
                    }

                    $("[crsid=\"" + res.id + "\"]").css({ "background-color": res.color });
                },
                error: function (response) {
                    $("#errtext").val(response);
                    $("#error").modal();
                }
            });
        });

        $("#addcourse").on('click',
            function() {
                $("#newcoursecp").colorpicker({ color: "rgb(22, 129, 61);", format: 'hex' });
                $("#coursename").val("");
                $("#courseModal").modal();
            });
        
        $("#courseok").on('click', function (ev) {

            let icolor = $('#newcoursecp').find('i:first').css('backgroundColor');
            $.ajax({
                type: 'POST',
                url: '/api/course',
                contentType: 'application/json',
                data: JSON.stringify({
                    "Name": $('#coursename').val(),
                    "Color": icolor
                }),
                success: function (res) {
                    
                    let ind = $("#corseTable tbody tr").size() + 1;

                    let newcurse = $(" <tr cid=" + res.id + ">" +
                        "<td class=\"col-md-1\"><span>" + ind + "</span></td><td class=\"col-md-4\"><div><p>" + res.name + "</p></div></td><td class=\"col - md - 1\">" +
                        "<div class=\"input-group colorpicker-component mycp colorpicker-element\" data-colorpicker-id=\"" + (ind - 1) + "\" >" +
                        "<span class=\"input-group-addon\"><i style=\"background-color: " + res.color + "; \"></i></span></div></td><td class=\"col - md - 1\">" +
                        "<span class=\"btn btn-success glyphicon glyphicon-edit\"></span></td>" +
                        "<td class=\"col-md-1\">" +
                        "<span class=\"btn btn-danger glyphicon glyphicon-trash\"></span></td></tr>");

                    $("#corseTable tbody").append(newcurse);
                    let newcourse = {
                        CourseId: res.id,
                        Color: res.color,
                        ShortName: $.map(res.name.split(" "),
                            function(t) {
                                return t.slice(0, 1);
                            }).join("")
                    };

                    courseColors.push(newcourse);
                },
                error: function (response) {
                    $("#errtext").val(response);
                    $("#error").modal();
                }
            });
        });

        $(".btn.btn-danger.glyphicon.glyphicon-trash").on("click",
            function (event) {

                let trItem = $(event.target).closest("tr");

                let id = trItem.attr("cid");

                $.ajax({
                    type: 'DELETE',
                    url: '/api/course/' + id,
                    contentType: 'application/json',
                    success: function () {

                        $(trItem).remove();
                        $("[crsid=\"" + id + "\"]").css({ "background-color": "#ffffff" }).find(".hview").text("");
                    },
                    error: function (response) {
                        $("#errtext").text(response.statusText);
                        $("#error").modal();
                    }
                });
            });

        $(".btn.btn-success.glyphicon.glyphicon-edit").on("click",
            function(event) {

                let item = $(event.target).parent().siblings().find("[cname]");

                $(item).next().removeClass("hidden");
                $(item).next().find(".row").show();

                $(item).addClass("hidden");

                let name = $(item).find("p").text();

                $(item).next().find("[coursenameedit]").val(name);

            });

        $("[nameok]").on('click',
            function(event) {

                event.preventDefault();

                let trItem = $(event.target).closest("tr");

                let id = trItem.attr("cid");
                let newname = $(trItem).find("[cname]").next().find("[coursenameedit]").val();

                $.ajax({
                    type: 'PUT',
                    url: '/api/course/name',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        "Id": id,
                        "Name": newname
                    }),
                    success: function (res) {

                        $(trItem).closest("[cname]").find("p").text(res.name);
                        let sname = $.map(res.name.split(" "),
                            function (t) {
                                return t.slice(0, 1).toUpperCase();
                            }).join("");

                        $("[crsid=\"" + id + "\"]").find(".hview").text(sname);
                    },
                    error: function (response) {
                        $("#errtext").text(response.statusText);
                        $("#error").modal();
                    }
                });
                
                $(event.target).parent().parent().hide();

                let item = $(trItem).find("[cname]");
                $(trItem).find("[cedit]").addClass("hidden");
                $(item).removeClass("hidden");
                $(item).find("p").text(newname);

                return false;
            });

        $("#nextWeek, #prevWeek").on("click",
            function(event) {

                let target = $(event.target),
                    week = $("#hoursTable").attr("week"),
                    year = $("#hoursTable").attr("year"),
                    id = $(target).attr("id"),
                    urllock = '/api/coursehour?week=' + week + '&year=' + year + '&next=' + (id === 'nextWeek' ? 'true' : 'false');

                $.ajax({
                    type: 'GET',
                    url: urllock,
                    contentType: 'application/json',
                    success: function (res) {

                        let allcells = $("[hourid]").find("[daynum]").parents("td");

                        allcells.css({ "background-color": "#ffffff" }).find(".hview").text("");

                        $("#prevWeek").parent().next().find("h5").text(res.weekTitle);

                        $("#hoursTable").attr("week", res.week).attr("year", res.year);

                        $.each(res.weekCourseHours,
                            function(index, item) {

                                var first = courseColors.find(m => m.CourseId === item.courseId);

                                if (first !== null && first !== undefined) {
                                    let el = $("[hourid=\'" + item.hour + "\']").find("[daynum = \'" + item.day + "\']");

                                    el.parent().parent().attr("crsid", item.courseId).css({ "background-color": first.Color });

                                    el.html(first.ShortName);
                                    //  
                                }
                            });
                    },
                    error: function(response) {
                        $("#errtext").text(response.statusText);
                        $("#error").modal();
                    }
                });
            });
    });
</script>